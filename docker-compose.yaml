version: '3.7'

services:
  nginx:
    image: nginx:1.21-alpine
    container_name: nginx
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - .:/var/www/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - symfony-network

  app:
    build:
      context: .
    container_name: symfony-app
    restart: unless-stopped
    networks:
      symfony-network:
    volumes:
      - .:/var/www/html
    environment:
      - SYMFONY_ENV=dev
      - DATABASE_URL=pgsql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@database:5432/${POSTGRES_DB}

  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB:-app}", "-U", "${POSTGRES_USER:-app}"]
      timeout: 5s
      retries: 5
      start_period: 60s
    networks:
      symfony-network:
    volumes:
      - database_data:/var/lib/postgresql/data:rw
volumes:
  database_data:

networks:
  symfony-network:
